name: Docker

on:
  push:
    branches: [ master, release/* ]
    tags: [ '**' ]

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    env:
      REPOSITORY_URL: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/alerta-api
    steps:
      - name: Checkout
<<<<<<< HEAD
        uses: actions/checkout@v2
      - name: Variables
        id: vars
        run: echo "SHORT_COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
=======
        uses: actions/checkout@v3
>>>>>>> origin/python311
      - name: Build image
        id: docker-build
        run: >-
          docker build
          -t $IMAGE_NAME
<<<<<<< HEAD
          -t $REPOSITORY_URL/$IMAGE_NAME:$(grep '__version__' alerta/__init__.py | cut -d"'" -f2)
          -t $REPOSITORY_URL/$IMAGE_NAME:${{ steps.vars.outputs.SHORT_COMMIT_ID }}
=======
          -t $REPOSITORY_URL/$IMAGE_NAME:$(cat VERSION)
          -t $REPOSITORY_URL/$IMAGE_NAME:$(git rev-parse --short HEAD)
>>>>>>> origin/python311
          -t $REPOSITORY_URL/$IMAGE_NAME:latest .
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REPOSITORY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Image
        id: docker-push
        run: docker push --all-tags $REPOSITORY_URL/$IMAGE_NAME

      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
